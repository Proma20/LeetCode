class Solution {
public:
    int jump(vector<int>& nums) {
        int jumps = 0, n = nums.size(), currBest = min(nums[0], n-1);
        for (int i=1; i<n; i++) {
            // maximize nextBest
            // figure out the farthest point we can go with this jump/step;
            int nextBest = currBest;
            for (int j=i; j<=currBest; j++) {
                nextBest = max(nextBest, j+nums[j]);
            }
            
            i = currBest;
            currBest = min(n-1, nextBest);
            jumps++;
        }
        
        return jumps;
    }
};