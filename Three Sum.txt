class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        int len = nums.size();
        sort(nums.begin(), nums.end());
        int i = 0;
        
        
        while(i < len){
            int target = -nums[i];
            int j = i + 1;
            
            while(j < len){
                vector<int>triplet;
                
                if(binary_search(nums.begin() + j + 1, nums.end(), target - nums[j])){
                    triplet.push_back(nums[i]);
                    triplet.push_back(nums[j]);
                    triplet.push_back(target - nums[j]);
                    result.push_back(triplet);
                }
                
                j = upper_bound(nums.begin() + i, nums.end(), nums[j]) - nums.begin();
                         
            }
            i = upper_bound(nums.begin(), nums.end(), nums[i]) - nums.begin();
                   
        }
    
        return result;
    }
                   
};